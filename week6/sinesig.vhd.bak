library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;  -- Tarvitaan laskentaoperaatioita varten

entity sinesig is
    port (
        clk    : in  std_logic;  -- Kellopulssi
        reset  : in  std_logic;  -- Reset
        sine_out : out std_logic_vector(7 downto 0)  -- 8-bittinen ulostulo (siniaalto)
    );
end entity sinesig;

architecture Behavioral of sinesig is

    -- Lookup table, jossa on 16 esilaskettua siniaallon arvoa (8-bittisinä arvoina)
    type sine_lut_array is array (0 to 1023) of STD_LOGIC_VECTOR(7 downto 0);
    signal sine_lut : sine_lut_array;
    signal index : integer := 0;

    -- Lisää signaalit tiedoston lukemiseen
    file lut_file : TEXT is "lut.txt"; -- Tiedoston nimi
    variable line_buffer : LINE; -- Variabeli rivin lukemista varten
    variable data_value : STD_LOGIC_VECTOR(7 downto 0); -- Tietomuuttuja
    );

    signal index : integer := 0;  -- LUT-osoitin

begin

	
    -- Prosessi tiedoston lukemiseen
    process
        variable i : integer := 0;
    begin
        -- Lue 1024 riviä tiedostosta
        while (i < 1024) loop
            readline(lut_file, line_buffer); -- Lue rivi tiedostosta
            read(line_buffer, data_value); -- Lue arvo rivistä
            sine_lut(i) := data_value; -- Tallenna taulukkoon
            i := i + 1;
        end loop;
        wait; -- Odota ikuisesti, koska tämä prosessi lukee vain kerran
    end process;
	 
	 
    process(clk, reset)
    begin
        if reset = '1' then
            index <= 0;  -- Nollataan LUT-indeksi
        elsif rising_edge(clk) then
            -- Päivitetään siniaallon arvo LUT-taulukosta
            sine_out <= sine_lut(index);
            -- Päivitetään LUT-indeksi, siirrytään seuraavaan arvoon
            if index = 1024 then
                index <= 0;  -- Kiertää LUT:n ympäri
            else
                index <= index + 1;
            end if;
        end if;
    end process;
    
end architecture Behavioral;
